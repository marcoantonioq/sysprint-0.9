#!/bin/bash
source /opt/print/class/BDClass.sh

## 
# Var
##

EXTENSION=$(echo $1 | cut -d. -f2);
FILE=$(echo $1 | cut -d. -f1);

# IF params == true {imprimir arquivo}

if [[ $1 ]]; then
	echo "Print: $1";
	lp $1
	exit 0;
fi


## 
# FUNCTIONS
##


function convertToPDF(){
	EXTENSION=$(echo $1 | cut -d. -f2);
	FILE=$(echo $1 | cut -d. -f1);
	if [[ 
		("doc" == $EXTENSION) ||
		("docx" == $EXTENSION) ||
		("dot" == $EXTENSION) ||
		("fodt" == $EXTENSION) ||
		("html" == $EXTENSION) ||
		("odt" == $EXTENSION) ||
		("ott" == $EXTENSION)
	]]; then
			libreoffice --headless --convert-to pdf $1
			EXTENSION="pdf";		
	fi
	echo "$FILE.$EXTENSION";
}

## 
# LOOOP
##

while :
do

	spool=$(echo "SELECT id, file_dir FROM spools WHERE status=1" | $querySql);
	while read line
	do 	
		id=$(echo $line | awk '{print $1}');
		if [[ $id == "id" || -z $id ]]; then
			echo $line;
			continue
		fi
		file_dir=$(echo $line |  cut -d" " -f 2-);
		params=$(echo "SELECT params as '' FROM spools WHERE id=$id LIMIT 1" | $querySql | tr -d '\n');
		
		# echo "id: $id";
		# echo -e "\tFILE_DIR: $file_dir";
		# echo -e "\tPARAMS: $params";

		
		for file in $file_dir; do
			echo "lp $params $file";
			job=$( lp $params $file | awk '{print $4}' | cut -d- -f2 );
		done

		if [[ $job ]]; then
			echo "UPDATE spools SET job='$job', status='0' WHERE id=$id;" | $querySql;
		else 
			echo "Falid print";
		fi

	done <<< "$spool";

	# echo "Loop $RELOAD_TIME_SHORT";
	sleep $RELOAD_TIME_SHORT;

done

## 
# END LOOOP
##